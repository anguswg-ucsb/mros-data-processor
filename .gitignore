# Local .terraform directories
**/.terraform/*

# .tfstate files
*.tfstate
*.tfstate.*

# Crash log files
crash.log
crash.*.log

# Exclude all .tfvars files, which are likely to contain sensitive data, such as
# password, private keys, and other secrets. These should not be part of version 
# control as they are data points which are potentially sensitive and subject 
# to change depending on the environment.
*.tfvars
*.tfvars.json

# Ignore override files as they are usually used to override resources locally and so
# are not checked in
override.tf
override.tf.json
*_override.tf
*_override.tf.json

# Include override files you do wish to add to version control using negated pattern
# !example_override.tf

# Include tfplan files to ignore the plan output of command: terraform plan -out=tfplan
# example: *tfplan*

# Ignore CLI configuration files
.terraformrc
terraform.rc

# terraform folder ignore
terraform.tfstate
terraform.tfstate.backup
terraform.tfvars
.terraform.lock.hcl
.terraform/
tfplan

# # Ignore all .tf files
*.tfvars
**/.terraform/

# infra/main.tf
variables.tf
infra/variables.tf
infra/terraform.tfstate
infra/terraform.tfstate.backup
infra/terraform.tfvars
infra/.terraform.lock.hcl
infra/tfplan

infra/*
!infra/main.tf

# ignore intermediary package folder 
package

# Ignore deploy folder and zip
deploy
deploy/
deploy/lambda_function.zip

# Ignore .DS_Store files
.DS_Store
**/.DS_Store

# Environment variables
.env

# History files
.Rhistory
.Rapp.history

# Session Data files
.RData
.RDataTmp

# User-specific files
.Ruserdata

# Example code in package build process
*-Ex.R

# Output files from R CMD build
/*.tar.gz

# Output files from R CMD check
/*.Rcheck/

# RStudio files
.Rproj.user/

# produced vignettes
vignettes/*.html
vignettes/*.pdf